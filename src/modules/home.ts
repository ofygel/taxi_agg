import { Markup } from 'telegraf';
import type { MyContext } from '../types';
import { bot } from '../bot';
import { ensureUser } from './shared';

const kbHome = () => Markup.inlineKeyboard([
  [Markup.button.callback('üßç –ö–ª–∏–µ–Ω—Ç', 'role_client')],
  [Markup.button.callback('üöñ –í–æ–¥–∏—Ç–µ–ª—å —Ç–∞–∫—Å–∏', 'role_driver_taxi')],
  [Markup.button.callback('üì¶ –ö—É—Ä—å–µ—Ä', 'role_courier')],
  [Markup.button.callback('üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞', 'support')],
  [Markup.button.callback('üß∞ –ö–∞–±–∏–Ω–µ—Ç', 'cabinet')]
]);

export const kbBackHome = () => Markup.inlineKeyboard([[Markup.button.callback('üîô –ù–∞ –≥–ª–∞–≤–Ω—É—é', 'go_home')]]);

export async function showHome(ctx: MyContext, note?: string) {
  const me = await ensureUser(ctx);
  const role = me?.role || null;
  const msg = [
    note ? `‚ÑπÔ∏è ${note}` : null,
    '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å:',
    role ? `–¢–µ–∫—É—â–∞—è —Ä–æ–ª—å: <b>${role}</b>` : '–†–æ–ª—å –ø–æ–∫–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞.'
  ].filter(Boolean).join('\n');
  return ctx.reply(msg, { parse_mode: 'HTML', ...kbHome() });
}

export function installHome() {
  bot.start(async (ctx) => { await ensureUser(ctx); ctx.session = {}; return showHome(ctx); });
  bot.action('go_home', async (ctx) => { await ctx.answerCbQuery(); ctx.session = {}; try { await (ctx as any).deleteMessage?.(); } catch { } return showHome(ctx, '–û–∫.'); });
}
